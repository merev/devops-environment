---
- hosts: web
  become: true

  tasks:

    - name: Install PHP packets on RedHat
      dnf: name=php,php-mysqlnd state=present
      when: ansible_os_family == "RedHat"

    - name: Install Apache HTTP Server on Red Hat
      dnf: name=httpd state=present
      when: ansible_os_family == "RedHat"

    - name: Start Apache HTTP Server and Enable it on Red Hat
      service: name=httpd state=started enabled=true
      when: ansible_os_family == "RedHat"

    - name: Red Hat - Open HTTP Port in the Firewall
      firewalld:
        port: 80/tcp
        permanent: true
        state: enabled
        immediate: true
      when: ansible_os_family == "RedHat"

    - name: Install PHP packets on Debian
      apt: name=php,php-mysqlnd,ufw state=present update_cache=true
      when: ansible_os_family == "Debian"

    - name: Install Apache HTTP Server on Debian
      apt: name=apache2 state=present
      when: ansible_os_family == "Debian"

    - name: Start Apache HTTP Server and Enable it on Debian
      service: name=apache2 state=started enabled=true
      when: ansible_os_family == "Debian"

    - name: Remove default html dir
      ansible.builtin.file:
        path: /var/www/html
        state: absent

    - name: Create a directory for First app
      ansible.builtin.file:
        path: /var/www/app1
        state: directory
        mode: '0755'

    - name: Create a directory for Second app
      ansible.builtin.file:
        path: /var/www/app2
        state: directory
        mode: '0755'

    - name: Remove file default apache conf file
      ansible.builtin.file:
        path: /etc/apache2/sites-available/000-default.conf
        state: absent

    - name: Copy the apache conf file
      copy: src=apps-data/app2-data/web/000-default.conf  dest=/etc/apache2/sites-available/000-default.conf  

    - name: Copy the files for First app
      copy: src=apps-data/app2-data/web/app1/  dest=/var/www/app1/

    - name: Copy the files for Second app.
      copy: src=apps-data/app2-data/web/app2/  dest=/var/www/app2/

    - name: Restart Apache on Debian
      ansible.builtin.command: systemctl restart apache2
      when: ansible_os_family == "Debian"

    - name: Restart Apachge on RedHat
      ansible.builtin.command: systemctl restart httpd
      when: ansible_os_family == "RedHat"



- hosts: db
  become: true

  tasks:
    - name: Install MariaDB on RedHat
      dnf:
        name: mariadb-server
        state: present
      when: ansible_os_family == "RedHat"

    - name: Install MariaDB on Debian
      apt:
        name: mariadb-server, ufw
        update_cache: true
        state: present
      when: ansible_os_family == "Debian"

    - name: Start and enable MariaDB
      service: name=mariadb state=started enabled=true

    - name: Adjust MariaDB connectivity on RedHat
      ansible.builtin.command: sed -i.bak s/127.0.0.1/0.0.0.0/g /etc/my.cnf.d/mariadb-server.cnf
      when: ansible_os_family == "RedHat"

    - name: Adjust MariaDB connectivity on Debian
      ansible.builtin.command: sed -i.bak s/127.0.0.1/0.0.0.0/g /etc/mysql/mariadb.conf.d/50-server.cnf
      when: ansible_os_family == "Debian"

    - name: Restart MariaDB
      ansible.builtin.command: systemctl restart mariadb

    - name: Copy the db setup file
      copy: src=apps-data/app2-data/db/ dest=/tmp/

    - name: Load the DB
      ansible.builtin.shell: mysql -u root < /tmp/db_setup.sql

    - name: Red Hat - Open HTTP Port in the Firewall
      firewalld:
        port: 3306/tcp
        permanent: true
        state: enabled
        immediate: true
      when: ansible_os_family == "RedHat"

    - name: Debian - Open HTTP Port in the Firewall
      ufw:
        rule: allow
        port: 3306
        proto: tcp
      when: ansible_os_family == "Debian"
